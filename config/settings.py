"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

from decouple import config

from .jazzmin import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', cast=str)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'users.User'

ADMINS = [
    ('Kagati', 'techkagati@gmail.com')
]

# Application definition

DJANGO_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

VENDOR_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'django_summernote',
    'corsheaders',
    'django_filters',
    'django_extensions',
    'drf_yasg',
    'storages',
    'django_cleanup.apps.CleanupConfig',
]

SYSTEM_APPS = [
    'users',
    'common',
    'blog',
    'core',
    'newsletter',
    'payments',
]

INSTALLED_APPS = DJANGO_APPS + VENDOR_APPS + SYSTEM_APPS
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# REST FRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ),

    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    # for swagger

    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.AllowAny',),
    'PAGE_SIZE': 50,
    'PAGE_SIZE_PARAM': 'page_size',  # overrides, using `?page_size=xxx`.
    'MAX_PAGE_SIZE': 1000,  # Maximum limit for `?page_size=xxx`.

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),

    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
}
X_FRAME_OPTIONS = 'SAMEORIGIN'
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kathmandu'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Firebase Settings
FIREBASE_KEY = config('FIREBASE_KEY')

FIREBASE_KEY_PATH = BASE_DIR / FIREBASE_KEY

CORS_ALLOW_ALL_ORIGINS = True

FONEPAY_VERIFY_URL = 'https://clientapi.fonepay.com/api/merchantRequest/verificationMerchant?'
FONEPAY_MERCHANT_CODE = config('FONEPAY_MERCHANT_CODE')

KHALTI_SECRET_KEY = config('KHALTI_SECRET_KEY')
KHALTI_VERIFY_URL = "https://khalti.com/api/v2/payment/verify/"

ESEWA_SCD = config('ESEWA_SCD')
ESEWA_VERIFY_URL = "https://esewa.com.np/epay/transrec"

IME_MERCHANT_CODE = "AKKU"
IMEPAY_TOKEN = config('IMEPAY_TOKEN')
IME_MODULE = config('IME_MODULE')
IME_URL = "https://payment.imepay.com.np:7979/api/Web/Confirm"

CYBERSOURCE_ACCESS_KEY = config('CYBERSOURCE_ACCESS_KEY')
CYBERSOURCE_SECRET_KEY = config('CYBERSOURCE_SECRET_KEY')
CYBERSOURCE_PROFILE_ID = config('CYBERSOURCE_PROFILE_ID')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

try:
    env_local = config('ENVIRONMENT')
    if env_local.lower() == 'local':
        from config.local import *
    else:
        from config.server import *
except AttributeError:
    from config.server import *

# CELERY STUFF
CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Kathmandu'

# JWT Configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=14),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',
}
